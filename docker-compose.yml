version: "3"

services:
  postgres:
    image: postgres:14.4
    restart: always
    env_file:
      - ./docker/pg-variables.env
    ports:
      - '5432:5432'

  service:
    build: ./app
    entrypoint: /opt/app/docker-entrypoint.sh
    depends_on:
      - postgres
    volumes:
      - ./static:/var/www
    expose:
      - "8000"
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@admin.com

  nginx:
    image: nginx:1.23.0
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx:/etc/nginx/conf.d:ro
      - ./static:/var/www
    depends_on:
      - service
    ports:
      - "80:80"

  etl:
    build: ./etl
    environment:
      - FILE_STATE_PATH=./local_storage/local_state.json
      - ELASTIC_URI=http://es:9200/
    env_file:
      - ./docker/pg-variables.env
    command: /opt/etl/docker-entrypoint.sh
    volumes:
      - ./etl/local_storage/:/opt/etl/local_storage/
    depends_on:
      - es
      - service

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'

  search_api:
    build: ./search_api
    environment:
      - ELASTIC_HOST=es
      - ELASTIC_PORT=9200
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - etl
      - es
      - cache
    ports:
      - '8000:8000'

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
